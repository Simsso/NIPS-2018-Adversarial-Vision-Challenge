- hosts: nips_training
  vars:
      model_docker_image: "{{ model_docker_image }}"
  remote_user: nips-cloudbuilder
  become: yes
  tasks:
    - name: Add the gcsfuse distribution URL as a package source and import its public key (1)
      shell: export GCSFUSE_REPO=gcsfuse-`lsb_release -c -s`
    - name: Add the gcsfuse distribution URL as a package source and import its public key (2)
      shell: echo "deb http://packages.cloud.google.com/apt $GCSFUSE_REPO main" | sudo tee /etc/apt/sources.list.d/gcsfuse.list
    - name: Add the gcsfuse distribution URL as a package source and import its public key (3)
      shell: curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    - name: Update and install GCSFUSE
      shell: apt-get update & sudo apt-get install gcsfuse
    - name: Login into GCR Docker Registry
      shell: gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io
    - name: Add current user to fuse group
      shell: usermod -a -G fuse $USER
    - name: Make folder for mount
      shell: mkdir /nips-2018-adversarial-vision-challenge-data
    - name: Mount GCS Bucket
      shell: gcsfuse nips-2018-adversarial-vision-challenge-data /nips-2018-adversarial-vision-challenge-data
    - name: Pull and start training of model image
      command: docker run -d -p 6006:6006 -v /nips-2018-adversarial-vision-challenge-data:/nips-2018-adversarial-vision-challenge-data --runtime=nvidia -e MODEL_ID={{ model_docker_image }} -e NVIDIA_VISIBLE_DEVICES=0 gcr.io/nips-2018-207619/{{ model_docker_image }}